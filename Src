--Libraries

local Libraries = loadstring(game:HttpGet("https://raw.githubusercontent.com/nontkph/Rexel-Hub/main/Libraries"))()
local HttpService = game:GetService("HttpService")
local LibObject = Libraries.new(" Rexel Hub | Premium Script v.0.1 ")

--
Players = game:GetService("Players")
User = Players.LocalPlayer
RunService = game:GetService("RunService")
VirtualUser = game:GetService('VirtualUser')
TeleportService = cloneref(game:GetService("TeleportService"))
--
queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
PlaceId, JobId = game.PlaceId, game.JobId
--

getfenv().Loaded = getfenv().Loaded or false
-- Loading Config
print("Rexel Hub : Loading Config. . .")
getfenv().Config = {
	["AutoFarm"] = false;
	["Tool"] = "Combat";
	["instant"] = true;

	["AutoSukuna"] = false;
	["Sukuna Hop"] = false;
	["AutoHellhoundCursed"] = false;
	["HellhoundCursed Hop"] = false;

	["AutoRandomFruit"] = false;
	["Randommethod"] = "Beli";

	["Quest"] = "1-15";
	["Distance"] = 5;
}

-- Auto Exec
local TeleportCheck = false
Players.LocalPlayer.OnTeleport:Connect(function(State)
	if (not TeleportCheck) and queueteleport then
		warn("chck teleport")
		TeleportCheck = true
		queueteleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/nontkph/Rexel-Hub/main/Src'))()")
	end
end)


local PathConfig = `Rexel Hub/Last Pirate_{User.UserId/2}_Config.lua`
if not isfile("Rexel Hub") then  makefolder("Rexel Hub") warn("Create new Folder") end
if not isfile(PathConfig) then 
	appendfile(PathConfig, HttpService:JSONEncode(getfenv().Config))
	warn("Create File Config.")
end

getfenv().Config = HttpService:JSONDecode( readfile(PathConfig) ) or getfenv().Config
getfenv().Loaded = true
repeat task.wait() until getfenv().Loaded and game.Loaded

User.DisplayName = "Your mom"
User.Name = "Your mom"
game:GetService("Players").LocalPlayer.PlayerGui.NewInterGui.Frame.Username.Text = `Username: Your mom`

function Change(index, value)
	getfenv().Config[index] = value
	writefile(PathConfig, HttpService:JSONEncode(getfenv().Config))
end

local Pages = {
	["Main"] = LibObject:AddPage( "Main" );
	["Fruit"] = LibObject:AddPage( "Fruit" );
	["Teleport"] = LibObject:AddPage( "Teleport" );
	["Combat"] = LibObject:AddPage( "Combat" );
	["Misc"] = LibObject:AddPage( "Misc" );
};

local Groups = {
	["AutoFarm"] = Pages["Main"]:Group("Auto Farm", "Left");
	["Comfig Autofarm"] = Pages["Main"]:Group("Config", "Right");
	["Items"] = Pages["Main"]:Group("Config", "Left");
	["Beta Feature"] = Pages["Main"]:Group("BETA FEATURE", "Right");
};

-- Find Quests
local Path : Folder = workspace["ShipNpc and SetSpawn NPC"]
local Quests = {}
local method = {}
local FormatTarget = {}
local Tools = {}
-- Auto Farm Config
local dropdown_Quest = Groups["Comfig Autofarm"]:DropDown( "Quest", {}, false, (getfenv().Config["Quest"] or "1-15"), function(select)
	Change( "Quest", select )
end)

local dropdown_Tool = Groups["Comfig Autofarm"]:DropDown( "Tool", {}, false, (getfenv().Config["Tool"] or "Combat"), function(select)
	Change( "Tool", select )
end)

function RefreshQuest()
	Quests = {}
	FormatTarget = {}
	for index, value in next, Path:GetChildren() do
		if value:IsA("Model") and value:FindFirstChild("เเสงเควส") then
			local spil = string.split(value.Name, "-")
			if #spil == 2 then
				table.insert(Quests, value.Name)
				FormatTarget[value.Name] = (value:FindFirstChild("Click") or value:FindFirstChild("MarineClick")).Quest.Value
			end
		end
	end

	-- Update Drop Down
	dropdown_Quest:Set(Quests)
end
RefreshQuest()

function RefreshTool()
	Tools = {}
	
	for i, v in next, User.Backpack:GetChildren() do
		if v:IsA("Tool") and not v:FindFirstChild("DF") then
			table.insert( Tools, v.Name )
		end
	end
	dropdown_Tool:Set(Tools)
end
RefreshTool()

Groups["Comfig Autofarm"]:Button("Refresh Tool", RefreshTool)
Groups["Comfig Autofarm"]:Button("Refresh Quest", RefreshQuest)

-- method
function method.ChackTag(Folder : Folder)
	local result = false
	if Folder then
		for i, v in next, Folder:GetChildren() do
			if v:IsA("ObjectValue") then
				if v.Value == User then
					result  = true
					break
				end
			end
		end
	end
	return result
end

function method.Equip(tool : Tool)
	if tool and tool:IsA("Tool") then
		User.Character:FindFirstChildOfClass("Humanoid"):EquipTool(tool)
	end
end

function method.Click()
	VirtualUser:CaptureController()
	VirtualUser:Button1Down(Vector2.new(1280, 672))
end

function method.GetTool(ToolName : string)
	local result = nil
	
	for i, v in next, User.Backpack:GetChildren() do
		if v:IsA("Tool") and v.Name == ToolName then
			result = v
			break
		end
	end
	
	return result
end

method.DialogAction = function( TestRequest )
    for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Dialogue.Ui.ChoiceSelection:GetChildren()) do
        if v:IsA("ImageLabel") then
            if v:FindFirstChild("Label").Text:find(TestRequest or "Yes") or (not TestRequest and v:FindFirstChild("Label").Text:find("..."))  then
                v:FindFirstChild("ButtonContraner"):FindFirstChild("Button").Size = UDim2.new(10000,10000,10000,10000)
                v:FindFirstChild("ButtonContraner"):FindFirstChild("Button").Position = UDim2.new(0.5,0.5,0)
                v:FindFirstChild("ButtonContraner"):FindFirstChild("Button").AnchorPoint = Vector2.new(0.5,0.5)
                v:FindFirstChild("ButtonContraner"):FindFirstChild("Button").BackgroundTransparency = 1

                game:GetService('VirtualUser'):CaptureController()
                game:GetService('VirtualUser'):ClickButton1(Vector2.new(0,0))
            end
        end
    end
end

function method.HopServer()
	if httprequest then
		print("ServerHop. . .")
        local servers = {}
        local req = httprequest({Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true", PlaceId)})
        local body = HttpService:JSONDecode(req.Body)

        if body and body.data then
            for i, v in next, body.data do
                if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
                    table.insert(servers, 1, v.id)
                end
            end
        end

        if #servers > 0 then
			Teleporting = true
            TeleportService:TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], Players.LocalPlayer)
        else
            return print("Serverhop", "Couldn't find a server.")
        end
    else
        print("Incompatible Exploit", "Your exploit does not support this command (missing request)")
    end
end

-- Auto Farm
local Title_Label = Groups.AutoFarm:label(" : Auto Farm :")
Groups.AutoFarm:Line()
Groups.AutoFarm:Toggle("Auto Farm", (getfenv().Config["AutoFarm"] or false), function(bool)
	Change("AutoFarm", bool)
	if getfenv().Config.AutoFarm then
		repeat task.wait()

			if User.Quest.Doing.Value == "None" then
				if workspace["ShipNpc and SetSpawn NPC"]:FindFirstChild( getfenv().Config["Quest"] ) then
					User.Character.HumanoidRootPart.CFrame = workspace["ShipNpc and SetSpawn NPC"]:FindFirstChild( getfenv().Config["Quest"] ).HumanoidRootPart.CFrame * CFrame.new(0, 5, 0)
					local Prox = workspace["ShipNpc and SetSpawn NPC"]:FindFirstChild( getfenv().Config["Quest"] ):FindFirstChild("Proximity", true)
					if Prox then
						local NumButton = #game:GetService("Players").LocalPlayer.PlayerGui.Dialogue.Ui.ChoiceSelection:GetChildren()
						if NumButton == 1 then
							fireproximityprompt( Prox)
						elseif NumButton == 2 then
							method.DialogAction()
						elseif NumButton == 3 then
							method.DialogAction("Yes")
						end
						else
						warn("not found Proximity")
					end
				end
				else
					for _, enemy : Model in next, workspace.Lives:GetChildren() do wait()
						if not getfenv().Config.AutoFarm then break end
						local NumButton = #game:GetService("Players").LocalPlayer.PlayerGui.Dialogue.Ui.ChoiceSelection:GetChildren()
						if NumButton == 2 then
							method.DialogAction("...")
						end
						if (if getfenv().Config.AutoSukuna then not workspace.Lives:FindFirstChild("Sukuna") else true ) and (if getfenv().Config["AutoHellhoundCursed"] then not workspace.Lives:FindFirstChild("Hellhound Cursed") else true ) and enemy:FindFirstChild("Folder") and enemy:FindFirstChildOfClass("Humanoid") and enemy.Name:find(User.Quest.Doing.Value) and enemy:FindFirstChild("HumanoidRootPart") then
							
							repeat task.wait()
								if method.ChackTag(enemy:FindFirstChild("Folder")) and isnetworkowner(enemy.HumanoidRootPart) then
									enemy:FindFirstChild("Humanoid").Health = 0
								else
									if not User.Character:FindFirstChild("Buso") then
										local args = {
											[1] = "Buso"
										}
										game:GetService("ReplicatedStorage"):WaitForChild("Haki"):FireServer(unpack(args))								
									end
									User.Character.HumanoidRootPart.CFrame = enemy.HumanoidRootPart.CFrame * CFrame.new(0, 0, 5)
									method.Equip( method.GetTool(getfenv().Config.Tool) )
									method.Click()
								end
							until ( if getfenv().Config.AutoSukuna then workspace.Lives:FindFirstChild("Sukuna") ~= nil else false ) or not getfenv().Config.AutoFarm or not User.Character or User.Character:FindFirstChild("Humanoid").Health <= 0 or enemy:FindFirstChild("Humanoid").Health <= 0
							
						end
					end
			end
		until not getfenv().Config.AutoFarm
	end

end)

Groups.AutoFarm:Toggle("Auto Sukuna", (getfenv().Config["AutoSukuna"] or false), function(bool)
	Change("AutoSukuna", bool)
	if getfenv().Config.AutoSukuna then
		repeat task.wait() 
			if workspace.Lives:FindFirstChild("Sukuna") then
			for _, enemy : Model in next, workspace.Lives:GetChildren() do wait()
				if not getfenv().Config.AutoSukuna then break end
				if enemy:FindFirstChild("Folder") and enemy.Name == "Sukuna" and enemy:FindFirstChildOfClass("Humanoid") and enemy:FindFirstChild("HumanoidRootPart") then
					
					repeat task.wait()
						if method.ChackTag(enemy:FindFirstChild("Folder")) and isnetworkowner(enemy.HumanoidRootPart) then
							enemy:FindFirstChild("Humanoid").Health = 0
						else
							if not User.Character:FindFirstChild("Buso") then
								local args = {
									[1] = "Buso"
								}
								game:GetService("ReplicatedStorage"):WaitForChild("Haki"):FireServer(unpack(args))								
							end
							User.Character.HumanoidRootPart.CFrame = enemy.HumanoidRootPart.CFrame * CFrame.new(0, 0, 5)
							method.Equip( method.GetTool(getfenv().Config.Tool) )
							method.Click()
						end
					until not getfenv().Config.AutoSukuna or not User.Character or User.Character:FindFirstChild("Humanoid").Health <= 0 or enemy:FindFirstChild("Humanoid").Health <= 0
					
				end
			end
		else
			if getfenv().Config["Sukuna Hop"] then
				wait(30)
				if getfenv().Config["Sukuna Hop"] and not User.Backpack:FindFirstChild("Sukuna Finger") then
					method.HopServer()
					else
					if User.Backpack:FindFirstChild("Sukuna Finger") then
						--User.PlayerGui.Dialogue.Ui.ChoiceSelectionHorizontal:GetChildren()[3].ButtonContraner.Button.Size = Udim2.new(100, 0, 100, 0)
					end
				end
			end
		end
		until not getfenv().Config.AutoSukuna
	end
end)

Groups.AutoFarm:Toggle("Sukuna Hop", (getfenv().Config["Sukuna Hop"] or false), function(bool)
	Change("Sukuna Hop", bool)
end)

Groups.AutoFarm:Toggle("Auto Hellhound Cursed", (getfenv().Config["AutoHellhoundCursed"] or false), function(bool)
	Change("AutoHellhoundCursed", bool)
	if getfenv().Config["AutoHellhoundCursed"] then
		repeat task.wait() 
			if not workspace.Lives:FindFirstChild("Sukuna") and workspace.Lives:FindFirstChild("Hellhound Cursed") then
			for _, enemy : Model in next, workspace.Lives:GetChildren() do wait()
				if not getfenv().Config["AutoHellhoundCursed"] then break end
				if enemy:FindFirstChild("Folder") and enemy.Name == "Hellhound Cursed" and enemy:FindFirstChildOfClass("Humanoid") and enemy:FindFirstChild("HumanoidRootPart") then
					
					repeat task.wait()
						if method.ChackTag(enemy:FindFirstChild("Folder")) and isnetworkowner(enemy.HumanoidRootPart) then
							enemy:FindFirstChild("Humanoid").Health = 0
						else
							if not User.Character:FindFirstChild("Buso") then
								local args = {
									[1] = "Buso"
								}
								game:GetService("ReplicatedStorage"):WaitForChild("Haki"):FireServer(unpack(args))								
							end

							User.Character.HumanoidRootPart.CFrame = enemy.HumanoidRootPart.CFrame * CFrame.new(0, 0, 5)
							method.Equip( method.GetTool(getfenv().Config.Tool) )
							method.Click()
						end
					until not getfenv().Config["AutoHellhoundCursed"] or not User.Character or User.Character:FindFirstChild("Humanoid").Health <= 0
					
				end
			end
		else
			if getfenv().Config["HellhoundCursed Hop"] then
				wait(30)
				if getfenv().Config["HellhoundCursed Hop"] and not User.Backpack:FindFirstChild("Sukuna Finger") then
					method.HopServer()
					else
					if User.Backpack:FindFirstChild("Sukuna Finger") then
						--User.PlayerGui.Dialogue.Ui.ChoiceSelectionHorizontal:GetChildren()[3].ButtonContraner.Button.Size = Udim2.new(100, 0, 100, 0)
					end
				end
			end
		end
		until not getfenv().Config.AutoHellhoundCursed
	end
end)

Groups.AutoFarm:Toggle("Hellhound Cursed Hop", (getfenv().Config["HellhoundCursed Hop"] or false), function(bool)
	Change("HellhoundCursed Hop", bool)
end)

local formathMethod = {
	["Beli"] = [[250,000 Beli]];
	["LP"] = [[1 LP]];
}

local dropdown_methodRandom = Groups["AutoFarm"]:DropDown( "Random method", { "Beli", "LP" }, false, (getfenv().Config["Randommethod"] or "Beli"), function(select)
	Change( "Randommethod", select )
end)


Groups.AutoFarm:Toggle("Random Fruit", (getfenv().Config["AutoRandomFruit"] or false), function(bool)
	pcall(function()
		Change("AutoRandomFruit", bool)
		if getfenv().Config["AutoRandomFruit"] then
			repeat task.wait() 
				User.Character.HumanoidRootPart.CFrame = workspace["ShipNpc and SetSpawn NPC"]:FindFirstChild("Random Fruit").HumanoidRootPart.CFrame * CFrame.new(0, 5, 0)
					local Prox = workspace["ShipNpc and SetSpawn NPC"]:FindFirstChild( "Random Fruit" ):FindFirstChild("ProximityPrompt", true)
					if Prox then
						local NumButton = #game:GetService("Players").LocalPlayer.PlayerGui.Dialogue.Ui.ChoiceSelection:GetChildren()
						if NumButton == 1 then
							fireproximityprompt( Prox)
						elseif NumButton == 3 then
							method.DialogAction("Yes")
						elseif NumButton == 4 then
							method.DialogAction( formathMethod[getfenv().Config["Randommethod"] or "Beli"] )
						end
						else
						warn("not found Proximity")
					end
			until not getfenv().Config["AutoRandomFruit"]
		end
	end)
end)
